{"pages":[{"title":"About","text":"40623101 網站 https://github.com/mdecadp2018/site-40623101 倉儲: https://mdecadp2018.github.io/site-40623101 投影片: https://mdecadp2018.github.io/site-40623101/reveal 網誌: https://mdecadp2018.github.io/site-40623101/blog","tags":"misc","url":"https://mdecadp2018.github.io/site-40623101/blog/pages/about/"},{"title":"Week 7","text":"Github無法登入 參考網址: https://github.com/mdecourse/cadp2018/issues/11","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623101/blog/2018-Fall-Week7-Blog.html"},{"title":"Week 6","text":"利用記事本，安排人事時地物等關鍵內容 人: 第九週前為個人學習 Onshape。 事: 除了會利用 Onshape 繪出各 Lesson 中所要求的零組件外，也希望能用手機或電腦的英英字典網羅所需了解的單字廣泛字義。 時: 在不同時間點, 即便個人也會需要使用分散式版次管理系統，來提升電腦輔助設計與繪圖效益, 等到六人協同執行期末專案時，不同組員可能在不同時間甚至不同時區參與協同，因此對於分散式版次管理系統的依賴將會越高。 地: 由於採用可攜與雲端系統，可以降低因為不同地點電腦套件的版本、內容與設定差異所造成的輔助設計問題。 物: 主要採用可攜與雲端系統，並且在 github classroom 中上課，每位學員都可以彼此從網站、簡報與網誌中的內容互相觀摩學習。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623101/blog/2018-Fall-Week6-Blog.html"},{"title":"Week 5","text":"查看 git 版本 指令為git version 示範如下網址: week5","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623101/blog/2018-Fall-Week5-Blog.html"},{"title":"Week 4","text":"自我學習Onshape Onshape 課程說明 參考網址: http://mde.tw/cadp2018/content/index.html","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623101/blog/2018-Fall-Week4-Blog.html"},{"title":"Week 3","text":"學習如何使用onshape 一、 onshape 按下Sketch新建草稿。 畫好草圖之後,Extrude擠出。 二、Git 的功能介紹 https://mdecadp2018.github.io/site-40623101/content/Week3.html","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623101/blog/2018-Fall-Week3-Blog.html"},{"title":"Week 2","text":"管理網站 CMSimfly 網站 啟動近端動態系統 python wsgi.py ，並開啟對應網址 https://localhost:8443 。 login帳號然後編輯網站。 編輯完後按下 generate_pages 鈕，將動態網頁資料轉換成，靜態網頁資料。 進行新增、提交及推送到遠端的倉儲。 reveal 投影片 以 Leo Editor 開啟位於 config 下的 reveal.leo去進行編輯。 編輯完後啟動近端靜態系統 http-server.py ，並開啟對應網址 https://localhost:8444/reveal 編輯的部分就直接會在此網站上有所改變。 最後進行新增、提交及推送到遠端的倉儲。 pelican 網誌 以 Leo Editor 開啟位於 config下的 pelican.leo 去進行編輯。 因為下面網址牽涉到遠端連結，所以要先到@edit publishconf.py修改SITEURL = ' https://mdecadp2018.github.io/site-40623101/blog ' 因為牽涉到遠端連結的討論區，所以修改成DISQUS_SITENAME = \"mdecadp2018\"。 編輯完後先進行近端推送 (local-blog) ，並啟動近端靜態系統 http-server.py ，然後開啟所對應的網址 https://localhost:8444/blog 。 編輯的部分就直接會在近端靜態網址上有所改變。 進行遠端推送 (github-blog) 。 最後進行新增、提交及推送到遠端的倉儲。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623101/blog/2018-Fall-Week2-Blog.html"},{"title":"Week 1","text":"領取期中作業 下載 p37.7z ，並解壓縮到自己的隨身碟裡。 登入 Github 帳號後, 連結至 https://classroom.github.com/a/fGqXU9kO 領取個人的期中作業。 將此倉儲以 git clone 指令 clone 到近端，並利用 git checkout 切換分支到 gh-pages。","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623101/blog/2018-Fall-Week1-Blog.html"},{"title":"2018 Fall 分組網誌","text":"2018 Fall 開始將網際內容管理、投影片與網誌進行整合. 課程倉儲 利用 Github 倉儲存放與計算機程式相關的資料, 有幾項好處: 第一, 在不自建網站的情況下, 目前 Github 仍允許免費使用, 管理者除了可以利用網際模式將資料送到對應的 cp github 倉儲 外, 也可以利用近端的 git 客戶端程式, 以分散式版次的流程管理各階段的改版資料. 第二, Github 提供的 Github Pages, 可以讓純 html 加上 Javascript 的網站, 直接在 cp 課程網站 伺服. 第三, 改版後的 CMSimfly, 加上 Pelican 靜態網誌與 Reveal.js 投影片系統, 均為靜態網站資料, 可以直接整合一起, 透過一個網址當作上課參考資料. 該學習哪種程式語言? C/C++、Python、Lua 或 Javascript? 都可以. 在這裡, 學 C/C++ 是為了編寫 Arduino 控制程式, 以及結合 Qt5 建立各種能快速進行工程分析的程式庫, 學習 Python 是為了快速完成 C/C++ 無法迅速完成的分析、模擬與運算, 也能透過 PyQt5 建立視窗程式, 或者呼叫 Flask 建立能在網際環境中執行的協同設計套件. 學習 Lua 是為了能在 V-rep 中使用, 至於 Javascript, 已經無所不在, 尤其在網際成是開發過程, 更是重要, 有其學習的必要性.","tags":"Misc","url":"https://mdecadp2018.github.io/site-40623101/blog/2018-Fall-Project-Blog.html"}]}